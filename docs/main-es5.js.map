{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/sc-toolbar/sc-toolbar.component.ts","webpack:///src/app/components/sc-toolbar/sc-toolbar.component.html","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/newspaper/create-post/create-post.component.ts","webpack:///src/app/newspaper/create-post/create-post.component.html","webpack:///src/app/newspaper/home/home.component.ts","webpack:///src/app/newspaper/home/home.component.html","webpack:///src/app/newspaper/login/login.component.ts","webpack:///src/app/newspaper/login/login.component.html","webpack:///src/app/newspaper/newspaper-routing.module.ts","webpack:///src/app/newspaper/newspaper.module.ts","webpack:///src/app/newspaper/register/register.component.ts","webpack:///src/app/newspaper/register/register.component.html","webpack:///src/app/newspaper/services/create-post.service.ts","webpack:///src/app/showcase/home/home.component.ts","webpack:///src/app/showcase/home/home.component.html","webpack:///src/app/showcase/pages/about/about.component.ts","webpack:///src/app/showcase/pages/about/about.component.html","webpack:///src/app/showcase/pages/blogs/blogs.component.ts","webpack:///src/app/showcase/pages/blogs/blogs.component.html","webpack:///src/app/showcase/pages/blogs/blogs.service.ts","webpack:///src/app/showcase/pages/books/books.component.ts","webpack:///src/app/showcase/pages/books/books.component.html","webpack:///src/app/showcase/pages/opinion/opinion.component.ts","webpack:///src/app/showcase/showcase-routing.module.ts","webpack:///src/app/showcase/showcase.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","ScToolbarComponent","ErrorComponent","CreatePostComponent","createPostService","getBanner","subscribe","result","image","HomeComponent","LoginComponent","children","NewspaperRoutingModule","forChild","NewspaperModule","RegisterComponent","CreatePostService","httpClient","get","providedIn","pages","label","AboutComponent","color1","color2","color3","color4","color5","introParagraph","BlogsComponent","blogService","allBlogs","getBlogs","data","highlightedBlog","find","i","isHighlighted","blogList$","filter","linkToBlog","window","open","BlogsService","BooksComponent","OpinionComponent","twttr","widgets","load","ShowcaseRoutingModule","ShowcaseModule","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ErrorComponent } from './error/error.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/showcase/blog',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: ErrorComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { ErrorComponent } from './error/error.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ShowcaseModule } from './showcase/showcase.module';\nimport { NewspaperModule } from './newspaper/newspaper.module';\n\nimport { environment } from '../environments/environment';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ShowcaseModule,\n    NewspaperModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-toolbar',\n  templateUrl: './sc-toolbar.component.html',\n  styleUrls: ['./sc-toolbar.component.css']\n})\nexport class ScToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <img src=\"assets/profile-pic.jpg\" class=\"avatar\" alt=\"profile picture\">\n        <div class=\"title-text\">\n            <span class=\"title-text\">\n                VENKATA KEERTI KOTARU \n            </span>\n            <span class=\"small-font\">\n                ( k e e r t i )\n            </span>\n\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\n    <h2>This is Knowhere</h2>\n    Click <a href=\"#\"> here </a> to get to nearest Gas Station / Petrol Bunk!\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CreatePostService } from 'src/app/newspaper/services/create-post.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  image;\n  constructor(private createPostService: CreatePostService) { }\n\n  ngOnInit(): void {\n    this.createPostService.getBanner().subscribe(\n      (result) => {\n        this.image =`${result[1]}`;\n      }\n    );\n  }\n\n}\n","<form class=\"row\">\n    <span class=\"col-4\"></span>\n    <div class=\"col-4\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-12\">\n                <mat-label> Title</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-12\">\n                <mat-label> Describe</mat-label>\n                <textarea matInput rows=\"6\"></textarea>\n            </mat-form-field>\n        </div>\n        <div>\n            <img [src]=\"image\" style=\"height:500px;width:500px\">\n        </div>\n        <div class=\"row\">\n            <button mat-button color=\"primary\">Submit</button>\n            <button mat-button >Cancel</button>\n        </div>\n    </div>\n    <span class=\"col-2\"></span>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n    <mat-toolbar-row class=\"row\">\n      <span class=\"col-4\"></span>\n      <h1 class=\"col-4 center-align\"> JavaScript Times</h1>\n      <span class=\"col-4\"></span>\n    </mat-toolbar-row>\n</mat-toolbar>\n<router-outlet class=\"col-10\"></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"row\">\n    <span class=\"col-4\"></span>\n    <div class=\"col-4\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-12\">\n                <mat-label> E-mail</mat-label>\n                <input matInput type=\"email\">\n            </mat-form-field>\n            <mat-form-field class=\"col-12\">\n                <mat-label> Password</mat-label>\n                <input matInput type=\"password\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <button mat-button color=\"primary\">Login</button>\n            <button mat-button >Cancel</button>\n        </div>\n    </div>\n    <span class=\"col-4\"></span>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\n\nconst routes: Routes = [{\n  path: 'newspaper',\n  redirectTo: 'newspaper/admin/register',\n  pathMatch: 'full'\n}, {\n  path: 'newspaper',\n  component: HomeComponent,\n  children: [{\n    path: 'admin/register',\n    component: RegisterComponent\n  }, {\n    path: 'admin/login',\n    component: LoginComponent\n  },{\n    path: 'admin/post',\n    component: CreatePostComponent\n  }]\n},];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewspaperRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NewspaperRoutingModule } from './newspaper-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\n\n\n@NgModule({\n  declarations: [HomeComponent, RegisterComponent, LoginComponent, CreatePostComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatToolbarModule,\n    NewspaperRoutingModule\n  ]\n})\nexport class NewspaperModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"row\">\n    <span class=\"col-2\"></span>\n    <div class=\"col-8\">\n        <div class=\"row\">\n            <mat-form-field class=\"col-6\">\n                <mat-label> Full Name</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> E-mail</mat-label>\n                <input matInput type=\"email\">\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> Password</mat-label>\n                <input matInput type=\"password\">\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> Twitter Handle</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> LinkedIn URL</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> Bio</mat-label>\n                <textarea matInput rows=\"4\"></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <button mat-button color=\"primary\">Submit</button>\n            <button mat-button >Cancel</button>\n        </div>\n    </div>\n    <span class=\"col-2\"></span>\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreatePostService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getBanner(){\n    return this.httpClient.get('/storage');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  pages = [{\n    path: 'blog',\n    label: \"Blog\"\n  },\n  {\n    path: 'books',\n    label: \"Books\"\n  },\n  {\n    path: 'about',\n    label: \"About Me!\"\n  }];\n}\n","<div class=\"fixed-header\">\n    <sc-toolbar></sc-toolbar>\n    <nav mat-tab-nav-bar>\n        <a mat-tab-link *ngFor=\"let page of pages\" [routerLink]=\"page.path\" routerLinkActive #rla=\"routerLinkActive\"\n            [active]=\"rla.isActive\">{{page.label}} </a>\n    </nav>\n</div>\n<div class=\"root-node\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  color1 = \"skyblue\";\n  color2 = \"#F4EAE8\";\n  color3 = \"lightpink\";\n  color4 = \"lightgreen\";\n  color5 = \"#FEBDB0\"\n\n  introParagraph = \"<i>I've</i> been in software development for over 17 years.\" + \n  \"<br />I'm a three-time Microsoft MVP and the author of a two books, and several technology articles from Dot Net Curry and DNC magazine.\" + \n  \"I hold a master's degree in software systems from the University of St. Thomas, Minneapolis and St. Paul, USA.\";\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-md-5 col-lg-3\">\n        <mat-card>\n            <img mat-card-image src=\"assets/profile-pic.jpg\" class=\"book-image\" alt=\"profile picture\">\n\n            <mat-card-header>\n                <mat-card-title>Venkata Keerti Kotaru</mat-card-title>\n                <mat-card-subtitle>Author, Three time Microsoft MVP and a blogger</mat-card-subtitle>\n            </mat-card-header>\n        </mat-card>\n    </div>\n    <div class=\"col-md-6 col-lg-8\">\n        <p class=\"d-none d-lg-block\">\n            <mat-grid-list cols=\"3\" rowHeight=\"220px\">\n                <mat-grid-tile colspan=\"2\" [style.background]=\"color5\">\n                    <span [innerHtml]=\"introParagraph\"></span>\n                </mat-grid-tile>\n                <a href=\"https://www.linkedin.com/in/keertikotaru/\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color1\">\n                        <img src=\"assets/Linkedin.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            View LinkedIn Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://twitter.com/keertikotaru\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color2\">\n                        <img src=\"assets/twitter.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Follow on Twitter\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://github.com/kvkirthy/\" target=\"__blank\">\n\n                    <mat-grid-tile [style.background]=\"color3\">\n                        <img src=\"assets/github.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Github Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://stackoverflow.com/users/2955455/vencki\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color4\">\n                        <img src=\"assets/stackoverflow.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Stackoverflow Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n\n            </mat-grid-list>\n        </p>\n        <p class=\"d-lg-none d-sm-block\">\n            <mat-grid-list cols=\"1\" rowHeight=\"240px\" class=\"single-item\">\n                <mat-grid-tile [style.background]=\"color5\">\n                    <span [innerHtml]=\"introParagraph\"></span>\n                </mat-grid-tile>\n            </mat-grid-list>\n            <mat-grid-list cols=\"1\" rowHeight=\"120px\" gutterSize=\"5px\">\n                <a href=\"https://www.linkedin.com/in/keertikotaru/\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color1\">\n                        <img src=\"assets/Linkedin.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            View LinkedIn Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://twitter.com/keertikotaru\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color2\">\n                        <img src=\"assets/twitter.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Follow on Twitter\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://github.com/kvkirthy/\" target=\"__blank\">\n\n                    <mat-grid-tile [style.background]=\"color3\">\n                        <img src=\"assets/github.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Github Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://stackoverflow.com/users/2955455/vencki\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color4\">\n                        <img src=\"assets/stackoverflow.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Stackoverflow Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n\n            </mat-grid-list>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { Blog } from 'src/app/models/blog';\nimport { BlogsService } from './blogs.service';\nimport * as blogData from './blogs-data.json';\n\n@Component({\n  selector: 'app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.css']\n})\nexport class BlogsComponent implements OnInit {\n\n  blogList$: Observable<Array<Blog>>;\n  highlightedBlog: Blog;\n  constructor(private blogService: BlogsService) { }\n\n  ngOnInit() {\n    let allBlogs = [];\n    this.blogService\n      .getBlogs()\n      .subscribe(data => {\n        allBlogs = data;\n        this.highlightedBlog = allBlogs.find(i => i.isHighlighted);\n        this.blogList$ = of(allBlogs.filter(i => !i.isHighlighted ));\n      });\n  }\n\n  cardClickHandler(linkToBlog){\n    window.open(linkToBlog, \"__blog\");\n  }\n\n}\n","<div class=\"d-none d-lg-block\">\n    <div class=\"row\">\n        <div class=\"col-sm-4 primary-card\" *ngIf=\"highlightedBlog\">\n            <mat-card (click)=\"cardClickHandler(highlightedBlog.linkToBlog)\">\n                <img mat-card-image class=\"card-image\" [src]=\"highlightedBlog.imageUrl\">\n\n                <mat-card-header>\n                    <mat-card-title>{{highlightedBlog.title}}\n                        <mat-icon color=\"accent\">fiber_new</mat-icon>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content>{{highlightedBlog.description}}</mat-card-content>\n            </mat-card>\n        </div>\n\n        <div class=\"col-sm-8\">\n            <div class=\"row\">\n                <ng-container *ngFor=\"let blog of blogList$ | async; let i=index\">\n                    <div class=\"col-md-6 small-cards-recent\">\n                        <mat-card *ngIf=\"i < 4\" (click)=\"cardClickHandler(blog.linkToBlog)\">\n\n                            <mat-card-header>\n                                <img mat-card-avatar [src]=\"blog.imageUrl\">\n                                <mat-card-subtitle>\n                                    {{blog.title}}\n                                </mat-card-subtitle>\n                            </mat-card-header>\n                            <mat-card-content>{{blog.description}}</mat-card-content>\n                        </mat-card>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <ng-container *ngFor=\"let blog of blogList$ | async; let i=index\">\n            <div *ngIf=\"i >= 4\" class=\"col-sm-4 small-cards\">\n                <mat-card (click)=\"cardClickHandler(blog.linkToBlog)\">\n                    <mat-card-header>\n                        <img mat-card-avatar [src]=\"blog.imageUrl\">\n                        <mat-card-subtitle>\n                            {{blog.title}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>{{blog.description}}</mat-card-content>\n                </mat-card>\n            </div>\n        </ng-container>\n    </div>\n</div>\n<div class=\"d-xs-block d-lg-none\">\n    <div class=\"row\">\n        <div class=\"col-sm-10\" *ngIf=\"highlightedBlog\">\n            <mat-card (click)=\"cardClickHandler(highlightedBlog.linkToBlog)\">\n                <img mat-card-image [src]=\"highlightedBlog.imageUrl\">\n\n                <mat-card-header>\n                    <mat-card-title>{{highlightedBlog.title}}\n                        <mat-icon color=\"accent\">fiber_new</mat-icon>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content>{{highlightedBlog.description}}</mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <ng-container *ngFor=\"let blog of blogList$ | async;\">\n                <mat-card (click)=\"cardClickHandler(blog.linkToBlog)\">\n                    <mat-card-header>\n                        <img mat-card-avatar class=\"avatar\" [src]=\"blog.imageUrl\">\n                        <mat-card-subtitle>{{blog.title}}</mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>{{blog.description}}</mat-card-content>\n                </mat-card>\n            </ng-container>\n        </div>\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Blog } from 'src/app/models/blog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getBlogs(): Observable<Blog[]>{\n    return this.httpClient\n      .get<Blog[]>('/blog-posts');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-3\"></div>\n  <div class=\"col-md-3 col-sm-12\">\n    <mat-card>\n      <img mat-card-image src=\"assets/book-2.jpg\" class=\"book-image\" alt=\"Angular 2 book\">\n      <!-- <mat-card-header> -->\n        <!-- <mat-card-subtitle>\n          Build Angular applications faster and better with TypeScript and Material Design.\n        </mat-card-subtitle>\n      </mat-card-header> -->\n\n      <mat-card-actions class=\"small-text\">\n        <a mat-button href=\"https://www.apress.com/us/book/9781484254332\" target=\"__blank\" color=\"primary\">Apress</a>\n        <a mat-button\n          href=\"https://www.amazon.com/Angular-Material-Design-TypeScript-Interface/dp/1484254333/ref=sr_1_3?keywords=angular+material&qid=1578191826&sr=8-3\"\n          target=\"__blank\" color=\"primary\">Amazon</a>\n        <a mat-button href=\"https://github.com/kvkirthy/superheroes\" target=\"__blank\" color=\"primary\">Samples</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n\n  <div class=\"col-md-3 col-sm-12\">\n    <mat-card>\n      <img mat-card-image src=\"assets/book-1.jpg\" class=\"book-image\" alt=\"Angular 2 book\">\n      <!-- <mat-card-header>\n        <mat-card-subtitle>\n          Build applications with AngularJS (version 1.x) and Material Design. Uses Angular Material library.\n        </mat-card-subtitle>\n      </mat-card-header> -->\n      <mat-card-actions class=\"small-text\">\n        <a mat-button href=\"https://www.apress.com/us/book/9781484221891\" target=\"__blank\" color=\"primary\">Apress</a>\n        <a mat-button href=\"https://www.amazon.com/dp/B01L17B8LK/ref=rdr_kindle_ext_tmb\" target=\"__blank\"\n          color=\"primary\">Amazon</a>\n        <a mat-button href=\"https://github.com/kvkirthy/Angular-Material-Samples\" target=\"__blank\"\n          color=\"primary\">Samples</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n  <div class=\"col-md-3\"></div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-opinion',\n  templateUrl: './opinion.component.html',\n  styleUrls: ['./opinion.component.css']\n})\nexport class OpinionComponent implements OnInit {\n\n  twttr = window['twttr'] || {};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.twttr && this.twttr.widgets.load();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './pages/about/about.component';\nimport { BooksComponent } from './pages/books/books.component';\nimport { BlogsComponent } from './pages/blogs/blogs.component';\nimport { HomeComponent } from './home/home.component';\n\n// import { HomeComponent } from './pages/home/home.component';\n// import { OpinionComponent } from './pages/opinion/opinion.component';\n\nexport const pages = [  \n  {\n    path: 'showcase',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'blog',\n        component: BlogsComponent,\n        label: \"Blog\"\n      },\n      {\n        path: 'books',\n        component: BooksComponent,\n        label: \"Books\"\n      },\n      {\n        path: 'about',\n        component: AboutComponent,\n        label: \"About Me!\"\n      }\n    ]\n  }];\n\nconst routes: Routes = [ \n  {\n    path: 'showcase',\n    redirectTo: '/showcase/blog',\n    pathMatch: 'full'\n  },\n  ...pages,\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowcaseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { BooksComponent } from './pages/books/books.component';\nimport { BlogsComponent } from './pages/blogs/blogs.component';\nimport { OpinionComponent } from './pages/opinion/opinion.component';\nimport { ScToolbarComponent } from '../components/sc-toolbar/sc-toolbar.component';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { ShowcaseRoutingModule } from './showcase-routing.module';\n\n\n@NgModule({\n  declarations: [    \n    HomeComponent,\n    AboutComponent,\n    BooksComponent,\n    OpinionComponent,\n    BlogsComponent,\n    ScToolbarComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatGridListModule,\n    ShowcaseRoutingModule\n  ]\n})\nexport class ShowcaseModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}