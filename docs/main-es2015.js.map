{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/alert-helper.service.ts","./src/app/components/sc-toolbar/sc-toolbar.component.ts","./src/app/components/sc-toolbar/sc-toolbar.component.html","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/newspaper/banner-story/banner-story.component.ts","./src/app/newspaper/banner-story/banner-story.component.html","./src/app/newspaper/compose/compose.component.ts","./src/app/newspaper/compose/compose.component.html","./src/app/newspaper/create-newspaper-edition/create-newspaper-edition.component.ts","./src/app/newspaper/create-newspaper-edition/create-newspaper-edition.component.html","./src/app/newspaper/create-post/create-post.component.ts","./src/app/newspaper/create-post/create-post.component.html","./src/app/newspaper/home/home.component.ts","./src/app/newspaper/home/home.component.html","./src/app/newspaper/image-picker/image-picker.component.ts","./src/app/newspaper/image-picker/image-picker.component.html","./src/app/newspaper/login/login.component.ts","./src/app/newspaper/login/login.component.html","./src/app/newspaper/main/main.component.ts","./src/app/newspaper/main/main.component.html","./src/app/newspaper/models/editions.ts","./src/app/newspaper/models/newspaper-post.ts","./src/app/newspaper/newspaper-edition-list/newspaper-edition-list.component.ts","./src/app/newspaper/newspaper-edition-list/newspaper-edition-list.component.html","./src/app/newspaper/newspaper-routing.module.ts","./src/app/newspaper/newspaper.module.ts","./src/app/newspaper/ngrx/edition.actions.ts","./src/app/newspaper/ngrx/edition.effects.ts","./src/app/newspaper/ngrx/edition.reducer.ts","./src/app/newspaper/ngrx/edition.selectors.ts","./src/app/newspaper/ngrx/story.actions.ts","./src/app/newspaper/ngrx/story.effects.ts","./src/app/newspaper/ngrx/story.reducer.ts","./src/app/newspaper/ngrx/story.selectors.ts","./src/app/newspaper/nine-per-page-layout/nine-per-page-layout.component.ts","./src/app/newspaper/nine-per-page-layout/nine-per-page-layout.component.html","./src/app/newspaper/post-details/post-details.component.ts","./src/app/newspaper/post-details/post-details.component.html","./src/app/newspaper/register/register.component.ts","./src/app/newspaper/register/register.component.html","./src/app/newspaper/services/edition.service.ts","./src/app/newspaper/services/post.service.ts","./src/app/newspaper/single-column-layout/single-column-layout.component.ts","./src/app/newspaper/single-column-layout/single-column-layout.component.html","./src/app/newspaper/story-card/story-card.component.ts","./src/app/newspaper/story-card/story-card.component.html","./src/app/newspaper/story-list/story-list.component.ts","./src/app/newspaper/story-list/story-list.component.html","./src/app/newspaper/update-posts/update-posts.component.ts","./src/app/newspaper/update-posts/update-posts.component.html","./src/app/showcase/home/home.component.ts","./src/app/showcase/home/home.component.html","./src/app/showcase/pages/about/about.component.ts","./src/app/showcase/pages/about/about.component.html","./src/app/showcase/pages/blogs/blogs.component.ts","./src/app/showcase/pages/blogs/blogs.component.html","./src/app/showcase/pages/blogs/blogs.service.ts","./src/app/showcase/pages/books/books.component.ts","./src/app/showcase/pages/books/books.component.html","./src/app/showcase/pages/opinion/opinion.component.ts","./src/app/showcase/showcase-routing.module.ts","./src/app/showcase/showcase.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ErrorComponent } from './error/error.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/showcase/blog',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    component: ErrorComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorComponent } from './error/error.component';\nimport { environment } from '../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { ShowcaseModule } from './showcase/showcase.module';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { NewspaperModule } from './newspaper/newspaper.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ShowcaseModule,\n    NewspaperModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MatSnackBarModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    // Instrumentation must be imported after importing StoreModule (config is optional)\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, // Restrict extension to log-only mode\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertHelperService {\n\n  constructor(private snackbar: MatSnackBar) { }\n\n  showAlertWithClose(message: string){\n    this.snackbar.open(message, \"close\")\n        .onAction()\n        .subscribe(() => this.snackbar.dismiss() );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'sc-toolbar',\n  templateUrl: './sc-toolbar.component.html',\n  styleUrls: ['./sc-toolbar.component.css']\n})\nexport class ScToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <img src=\"assets/profile-pic.jpg\" class=\"avatar\" alt=\"profile picture\">\n        <div class=\"title-text\">\n            <span class=\"title-text\">\n                VENKATA KEERTI KOTARU \n            </span>\n            <span class=\"small-font\">\n                ( k e e r t i )\n            </span>\n\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\n    <h2>This is Knowhere</h2>\n    Click <a href=\"#\"> here </a> to get to nearest Gas Station / Petrol Bunk!\n\n</div>\n","import { NewspaperPost } from '../models/newspaper-post';\nimport { Component, Input, Output, OnChanges, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-banner-story-card',\n  templateUrl: './banner-story.component.html',\n  styleUrls: ['./banner-story.component.css']\n})\nexport class BannerStoryComponent implements OnChanges {\n\n  bannerImage: string;\n\n  @Input() storyContent: string;\n  @Input() story: NewspaperPost;\n  @Input() showCardRaised:boolean = false;\n  @Input() customActionTitle: string;\n  @Input() primaryActionTitle: string = \"more...\"\n  @Input(\"ShouldUseImage\") shouldUseImage: boolean = true;\n  \n  @Output() OnImageClick = new EventEmitter();\n  @Output() customActionEvent = new EventEmitter();\n  @Output() primaryAction = new EventEmitter<NewspaperPost>();\n\n  ngInit(){\n    this.bannerImage = this.story.imageId;\n  }\n\n  ngOnChanges(){\n    this.bannerImage = this.bannerImage || 'assets/js.jpeg';\n  }\n\n  imageClicked(){\n    this.OnImageClick.emit();\n  }\n\n  customAction(){\n    this.customActionEvent.emit();\n  }\n\n  onPrimaryAction(){\n    this.primaryAction.emit(this.story);\n  }\n\n}\n","<mat-card [ngClass]=\"showCardRaised ?'mat-elevation-z2':'mat-elevation-z0'\">\n    <div class=\"storyImage\" *ngIf=\"shouldUseImage === true\">\n        <a (click)=\"imageClicked()\"><img [src]=\"bannerImage\" /></a>\n    </div>\n    <mat-card-header>\n        <mat-card-title>{{story.title}}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <div>\n            {{story.description}}\n        </div>\n        <div *ngIf=\"story.story\">\n            {{storyContent}}\n        </div>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-button (click)=\"onPrimaryAction()\">{{primaryActionTitle}}</button>\n        <button mat-button (click)=\"customAction()\" *ngIf=\"customActionTitle\">{{customActionTitle}}</button>\n    </mat-card-actions>\n</mat-card>","import { Store } from '@ngrx/store';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NewspaperEdition } from '../models/editions';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatHorizontalStepper } from '@angular/material/stepper';\nimport { getAllNewspaperEditions } from 'src/app/newspaper/ngrx/edition.actions';\nimport { NewspaperPost, StoryCategory } from 'src/app/newspaper/models/newspaper-post';\nimport { allNewspaperEditions, selectedEdition } from 'src/app/newspaper/ngrx/edition.selectors';\nimport { ImagePickerComponent } from 'src/app/newspaper/image-picker/image-picker.component';\nimport { categorizeStories, getAllStories, updateStoriesForEdition, updateStory, updateStoryJson } from '../ngrx/story.actions';\nimport { getStoryByCateory, getAssignedStories, getUnassignedStories, getUnassignedToCurrentEdition } from 'src/app/newspaper/ngrx/story.selectors';\n\n@Component({\n  selector: 'app-compose',\n  templateUrl: './compose.component.html',\n  styleUrls: ['./compose.component.css']\n})\nexport class ComposeComponent implements OnInit {\n\n  availableStories: NewspaperPost[] =[];\n  assignedStories: NewspaperPost[] =[];\n  selectedHighlightStory = new Array<NewspaperPost>();\n  selectedNewsBits = new Array<NewspaperPost>();\n  selectedNewsFeed = new Array<NewspaperPost>();\n  selectedBannerStory = new Array<NewspaperPost>();\n  selectedTitle : string;\n  selectedDescription : string;\n  selectedBannerImage : string;\n  selectedPostLink : string;\n  selectedStoryId : string;\n  editions: NewspaperEdition[];\n  currentEdition: NewspaperEdition;\n\n  CategoryBanner = StoryCategory.Banner;\n  CategoryHighlights = StoryCategory.Highlight;\n  CategoryNewsBits = StoryCategory.NewsBit;\n  CategoryFeed = StoryCategory.Feed;\n\n  @ViewChild(\"stepper\") stepper: MatHorizontalStepper;\n\n  constructor(private dialog: MatDialog, \n    private store: Store){ }\n\n  ngOnInit(): void {\n\n      this.store\n      .select(allNewspaperEditions)\n      .subscribe( (data) => {\n        this.editions = data;\n      });\n\n      this.store\n        .select(selectedEdition)\n        .subscribe( (data: NewspaperEdition) => {\n          if(data){\n            this.currentEdition = data;\n            this.queryStoreByEdition(this.currentEdition._id);\n            this.stepper.next();\n          }\n        });\n\n      this.store.dispatch(getAllNewspaperEditions());\n      this.store.dispatch(getAllStories());\n\n  }\n\n  private queryStoreByEdition(editionId: string){\n    this.store\n    .select(getAssignedStories, {editionId: editionId})\n    .subscribe((data) => {\n      this.assignedStories = data;\n    });\n    \n    this.store\n    .select(getStoryByCateory, {category: StoryCategory.Banner, editionId: editionId})\n    .subscribe( (data) => {\n      if(data){\n        if(data){\n          this.selectedBannerStory = data;\n        }\n      }\n    });\n\n    this.store\n    .select(getStoryByCateory, {category: StoryCategory.Highlight, editionId: editionId})\n    .subscribe( (data) => {\n      if(data){\n        this.selectedHighlightStory = data;\n      }\n    });\n\n    this.store\n    .select(getStoryByCateory,{category: StoryCategory.Feed, editionId: editionId})\n    .subscribe( (data) => {\n      if(data){\n        this.selectedNewsFeed = data;\n      }\n    });\n\n    this.store\n    .select(getStoryByCateory,{category: StoryCategory.NewsBit, editionId: editionId})\n    .subscribe( (data) => {\n      if(data){\n        this.selectedNewsBits = data;\n      }\n    });\n\n    this.store\n    // .select(getUnassignedToCurrentEdition, {editionId} )\n    .select(getUnassignedStories, {editionId} )\n    .subscribe((data) => {\n      this.availableStories = data;\n    });\n\n\n  }\n\n  onSelectTopBanner(post: NewspaperPost){\n    this.selectedBannerStory.push({\n      _id: post._id,\n      title : post.title,\n      imageId : post.imageId,\n      description : post.description,\n      story: post.story,\n      linkToPost : post.linkToPost,\n      user: post.user,\n    });\n    this.saveSelected(this.CategoryBanner, post._id)\n    // this.showPreview(post);\n  }\n\n  showPreview(post: NewspaperPost){\n    this.selectedStoryId = post._id;\n    this.selectedTitle = post.title;\n    this.selectedBannerImage = post.imageId;\n    this.selectedDescription = post.description;\n    this.selectedPostLink = post.linkToPost;\n  }\n\n  clearPreview(){\n      this.selectedTitle = '';\n      this.selectedBannerImage = '';\n      this.selectedDescription = '';\n      this.selectedPostLink = '';\n  }\n\n\n  onSelectTopHighlight(post: NewspaperPost){\n    this.selectedHighlightStory.push({\n      _id: post._id,\n      title : post.title,\n      imageId : post.imageId,\n      description : post.description,\n      story: post.story,\n      linkToPost : post.linkToPost,\n      user: post.user,\n    });\n    this.saveSelected(this.CategoryHighlights, post._id)\n  }\n\n  submitEdition(){\n    this.store.dispatch(updateStoriesForEdition({\n     posts: this.assignedStories.filter(i => i.edition._id === this.currentEdition._id)\n    }));\n  }\n\n  onSelectNewsBits(post: NewspaperPost){\n    this.selectedNewsBits.push({\n      _id: post._id,\n      title : post.title,\n      imageId : post.imageId,\n      description : post.description,\n      story: post.story,\n      linkToPost : post.linkToPost,\n      user: post.user,\n    });\n    this.saveSelected(this.CategoryNewsBits, post._id)\n  }\n\n  onSelectNewsFeed(post: NewspaperPost){\n    this.selectedNewsFeed.push({\n      _id: post._id,\n      title : post.title,\n      imageId : post.imageId,\n      description : post.description,\n      story: post.story,\n      linkToPost : post.linkToPost,\n      user: post.user,\n    });\n    this.saveSelected(this.CategoryFeed, post._id)\n  }\n\n  handleRemovedPost(post: NewspaperPost){\n    this.store.dispatch(categorizeStories({\n      newCategory: StoryCategory.None,\n      storyIds: [post._id]\n    }));\n  }\n\n  imageClicked(){\n    let dialogRef = this.dialog.open(ImagePickerComponent, {\n      height: '100%',\n      width: '100%'\n    });\n    dialogRef\n      .afterClosed()\n      .subscribe( data => {\n        this.selectedBannerImage=data;\n        let story = this.selectedBannerStory.find( story => story._id === this.selectedStoryId);\n        let newStory: NewspaperPost;\n        if(story){\n          newStory = Object.assign({}, story);\n          newStory.imageId = this.selectedBannerImage;\n          this.store.dispatch(updateStory(newStory));\n        }\n\n      });\n  }\n\n  saveSelected(category: StoryCategory, selectedStoryId:string = this.selectedStoryId){\n    // console.log(\"button selected\", this.selectedStoryId);\n    this.store.dispatch(categorizeStories({\n      newCategory: category,\n      storyIds: [selectedStoryId],\n      edition: this.currentEdition\n    }));\n\n  }\n\n}\n","<mat-horizontal-stepper (selectionChange)=\"clearPreview()\" #stepper>\n        <mat-step >\n            <ng-template matStepLabel>Select / Create Newspaper Edition</ng-template>\n            <div class=\"row\">\n                <app-create-newspaper-edition class=\"col-8\" [editions]=\"editions\">\n                </app-create-newspaper-edition>\n            </div>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>Choose top banner story</ng-template>\n            <div class=\"row\">\n                <app-story-list [Stories]=\"availableStories\" Title=\"Available Stories\" class=\"col-3\"\n                    (SelectedPost)=\"onSelectTopBanner($event)\">\n                </app-story-list>\n        \n                <app-story-list [Stories]=\"selectedBannerStory\" IsRemoveEnabled=\"true\" Title=\"Selected Stories\" class=\"col-3\"\n                    (RemovedPost)=\"handleRemovedPost($event)\" (SelectedPost)=\"showPreview($event)\"></app-story-list>\n        \n                <div class=\"col-6\">\n                    <div *ngIf=\"selectedTitle\">\n                        <app-banner-story-card \n                            [story] = \"{\n                                description: selectedDescription,\n                                imageId: selectedBannerImage,\n                                postLink: selectedPostLink\n                            }\" \n                            (OnImageClick)=\"imageClicked()\"></app-banner-story-card>\n        \n                    </div>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>Pick highlights</ng-template>\n            <div class=\"row\">\n                <app-story-list [Stories]=\"availableStories\" \n                    class=\"col-3\" \n                    Title=\"Available Stories\"  \n                    (SelectedPost)=\"onSelectTopHighlight($event)\">\n                </app-story-list>\n                \n                <app-story-list \n                        [Stories]=\"selectedHighlightStory\" \n                        IsRemoveEnabled=\"true\"\n                        Title=\"Selected Stories\"  \n                        class=\"col-3\" \n                        (RemovedPost)=\"handleRemovedPost($event)\"\n                        (SelectedPost)=\"showPreview($event)\"></app-story-list>\n\n                <div class=\"col-6\" *ngIf=\"selectedTitle\">\n                    <app-story-card [title]=\"selectedTitle\" \n                        [description]=\"selectedDescription\"\n                        (OnImageClick)=\"imageClicked()\"></app-story-card>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>Pick top news bits</ng-template>\n            <div class=\"row\">\n                <app-story-list [Stories]=\"availableStories\" \n                    class=\"col-3\" \n                    Title=\"Available Stories\"  \n                    (RemovedPost)=\"handleRemovedPost($event)\"\n                    (SelectedPost)=\"onSelectNewsBits($event)\">\n                </app-story-list>\n\n                <app-story-list \n                        [Stories]=\"selectedNewsBits\" \n                        IsRemoveEnabled=\"true\"\n                        Title=\"Selected Stories\"  \n                        class=\"col-3\" \n                        (RemovedPost)=\"handleRemovedPost($event)\"\n                        (SelectedPost)=\"showPreview($event)\"></app-story-list>\n\n                <div class=\"col-6\" *ngIf=\"selectedTitle\">\n                    <app-story-card [title]=\"selectedTitle\" \n                        [description]=\"selectedDescription\"\n                        ShouldUseImage=false\n                        (OnImageClick)=\"imageClicked()\"></app-story-card>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>Choose news feed</ng-template>\n            <div class=\"row\">\n                <app-story-list [Stories]=\"availableStories\" \n                    class=\"col-3\" \n                    Title=\"Available Stories\"  \n                    (SelectedPost)=\"onSelectNewsFeed($event)\">\n                </app-story-list>\n\n                <app-story-list \n                        [Stories]=\"selectedNewsFeed\" \n                        IsRemoveEnabled=\"true\"\n                        Title=\"Selected Stories\"  \n                        class=\"col-3\" \n                        (RemovedPost)=\"handleRemovedPost($event)\"\n                        (SelectedPost)=\"showPreview($event)\"></app-story-list>\n\n                <div class=\"col-6\" *ngIf=\"selectedTitle\">\n                    <app-story-card [title]=\"selectedTitle\" \n                        [description]=\"selectedDescription\"\n                        ShouldUseImage=false\n                        (OnImageClick)=\"imageClicked()\"></app-story-card>\n                </div>\n            </div>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>Review and confirm</ng-template>\n            <app-nine-per-page-layout></app-nine-per-page-layout>  \n            <div>\n                Review and confirm\n                <button (click)=\"submitEdition()\" mat-button >Go</button>\n            </div>\n        </mat-step>\n    <!-- </form> -->\n</mat-horizontal-stepper>","import { Store } from '@ngrx/store';\nimport * as actions from '../ngrx/edition.actions';\nimport { NewspaperEdition } from '../models/editions';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { EditionService } from '../services/edition.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertHelperService } from 'src/app/components/alert-helper.service';\n\n@Component({\n  selector: 'app-create-newspaper-edition',\n  templateUrl: './create-newspaper-edition.component.html',\n  styleUrls: ['./create-newspaper-edition.component.css']\n})\nexport class CreateNewspaperEditionComponent implements OnInit {\n\n  createNpeFormGroup: FormGroup;\n  selectedEdition: NewspaperEdition;\n  @Input('editions') editionsList: NewspaperEdition[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private editionService: EditionService,\n    private alertHelper: AlertHelperService,\n    private store: Store\n  ) { }\n\n  ngOnInit(): void {\n    this.createNpeFormGroup = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n\n  get title(){\n    return this.createNpeFormGroup.get('title');\n  }\n  \n  get description(){\n    return this.createNpeFormGroup.get('description');\n  }\n\n  get dateCreated(){\n    return this.createNpeFormGroup.get('dateCreated');\n  }\n\n  get isPublished(){\n    return this.createNpeFormGroup.get('isPublished');\n  }\n\n  showSelectedEdition($event){\n    this.selectedEdition = this.editionsList.find(i => i._id === $event.value);\n  }\n\n  continueWithEdition(selectedEdition){\n    this.store.dispatch(actions.setEdition(selectedEdition))\n  }\n\n  submit(){\n    if(this.createNpeFormGroup.valid){\n      this.editionService.create({\n        title: this.title.value,\n        description: this.description.value,\n        dateCreated: new Date(),\n        isPublished: false\n      }).subscribe(() => {\n        this.alertHelper.showAlertWithClose(\"Created a new edition\");\n      });\n    } else {\n      this.alertHelper.showAlertWithClose(\"Please provide correct values for the post\");\n    }\n\n  }\n\n  cancel(){\n\n  }\n\n}\n","<form [formGroup]=\"createNpeFormGroup\" class=\"row\">\n    <span class=\"col-sm-1 col-md-1\"></span>\n\n    <div class=\"col-sm-12 col-md-4 right-border-line\">\n        <h5>Select an existing edition</h5>\n        <mat-form-field appearance=\"fill\" >\n            <mat-label>Select Newspaper Editions</mat-label>\n            <mat-select (selectionChange)=\"showSelectedEdition($event)\" >\n                <mat-option *ngFor=\"let edition of editionsList\" [value]=\"edition._id\">\n                    {{edition.title}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div *ngIf=\"selectedEdition\" class=\"edition-details\">\n            <strong>{{selectedEdition.title}}</strong>\n            <div>{{selectedEdition.description}}</div>\n            <div>{{selectedEdition.dateCreated | date:'dd-MMM-yyyy hh:mm'}}</div>\n            <div>{{selectedEdition.isPublished?'Published':'Draft'}}</div>\n        </div>\n        <button *ngIf=\"selectedEdition\" type=\"button\" mat-button color=\"primary\" (click)=\"continueWithEdition(selectedEdition)\">Continue</button>\n\n    </div>\n\n    <span class=\"col-sm-1 col-md-1\"></span>\n\n    <div class=\"col-xs-12 col-sm-10 col-md-6\">\n        <div class=\"row\">\n            <h5>Create a new edition</h5>\n        </div>\n        <div class=\"row\">\n            <mat-form-field class=\"col-12\" id=\"title\" name=\"title\" >\n                <mat-label> Title</mat-label>\n                <input type=\"text\" formControlName=\"title\" matInput>\n                <mat-hint>  Provide a title </mat-hint> \n            </mat-form-field>\n            <mat-form-field id=\"description\" name=\"description\"  class=\"col-12\">\n                <mat-label> Description</mat-label>\n                <textarea matInput formControlName=\"description\" rows=\"3\"></textarea>\n                <mat-hint>  Describe the news edition </mat-hint> \n            </mat-form-field>\n        </div>\n        <div class=\"row actions-row\">\n            <button type=\"submit\" mat-button (click)=\"submit()\" color=\"primary\">Submit</button>\n            <button mat-button (click)=\"cancel()\">Cancel</button>\n        </div>\n    </div>\n\n    <span class=\"col-sm-1\"></span>\n</form>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/newspaper/models/newspaper-post';\nimport { AlertHelperService } from 'src/app/components/alert-helper.service';\nimport { FormBuilder, FormGroup, Validators, Form, NgForm, FormGroupDirective } from '@angular/forms';\nimport { PostService } from 'src/app/newspaper/services/post.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  createPostFormGroup: FormGroup;\n  @ViewChild(FormGroupDirective) frm;\n\n  constructor(private postService: PostService,\n    private formBuilder: FormBuilder,\n    private alertHelper: AlertHelperService) { \n      this.createPostFormGroup = this.formBuilder.group({\n        title: ['', Validators.required],\n        description: ['', Validators.required],\n        story: ['', Validators.required],\n        bannerImage: [''],\n        linkToPost: ['', [Validators.required, Validators.pattern(/https?:\\/\\/(.*)/gi)] ]\n      });\n    }\n\n  ngOnInit(): void {\n  }\n\n  get title(){\n    return this.createPostFormGroup.get('title');\n  }\n  \n  get description(){\n    return this.createPostFormGroup.get('description');\n  }\n\n  get story(){\n    return this.createPostFormGroup.get('story');\n  }\n\n  get bannerImage(){\n    return this.createPostFormGroup.get('bannerImage');\n  }\n\n  get linkToPostValue(){\n    let value:string = this.createPostFormGroup.get('linkToPost').value;\n    return value;\n  }\n\n  get author(): User{\n    return {\n      fullname: 'Vencki',\n      twitterHandle: '@keertikotaru',\n      userImageId: 'ny.jpg'\n    }\n  }\n\n  submit(){\n    if(this.createPostFormGroup.valid){\n      this.postService.create({\n        title: this.title.value,\n        description: this.description.value,\n        story: this.story.value,\n        imageId: this.bannerImage?.value,\n        linkToPost: this.linkToPostValue,\n        user: this.author\n      }).subscribe((result) => {\n        if(result['_id']){\n          this.reset();\n          this.alertHelper.showAlertWithClose(\"Thank you for your contribution.\");\n        } else {\n          this.alertHelper.showAlertWithClose(\"Something wrong! Post not created\");\n        }\n      }, error =>  this.alertHelper.showAlertWithClose(`Something wrong! ${JSON.stringify(error)}`));\n    } else {\n      this.alertHelper.showAlertWithClose(\"Please provide correct values for the post\");\n    }\n  }\n\n  cancel() {\n    this.reset();\n  }\n  \n  private reset(){\n    this.createPostFormGroup.reset();\n    Object.keys(this.createPostFormGroup.controls).forEach(key => {\n      this.createPostFormGroup.controls[key].setErrors(null)\n    });\n  }\n\n}\n","<form [formGroup]=\"createPostFormGroup\" class=\"row\">\n    <span class=\"col-sm-1 col-md-3\"></span>\n    <div class=\"col-xs-12 col-sm-10 col-md-6\">\n        <div class=\"row\">\n            <!-- <div class=\"col-sm-1 col-md-3\"></div>\n            <h1 class=\"col-sm-10 col-md-6\">Contribute a Post</h1>\n            <div class=\"col-sm-1 col-md-3\"></div> -->\n            <h1>Contribute a Post</h1>\n        </div>\n        <div class=\"row\">\n            <!-- <input type=\"text\" matInput id=\"title\" name=\"title\" formControl=\"title\"  matInput> -->\n\n            <mat-form-field class=\"col-12\" id=\"title\" name=\"title\" >\n                <mat-label> Title</mat-label>\n                <input type=\"text\" formControlName=\"title\" matInput>\n                <mat-hint>  Provide a title </mat-hint> \n            </mat-form-field>\n            <mat-form-field id=\"description\" name=\"description\"  class=\"col-12\">\n                <mat-label> Short description</mat-label>\n                <textarea matInput formControlName=\"description\" rows=\"4\"></textarea>\n                <mat-hint>  Provide a short description </mat-hint> \n            </mat-form-field>\n            <mat-form-field id=\"description\" name=\"description\"  class=\"col-12\">\n                <mat-label>Detailed Story</mat-label>\n                <textarea matInput formControlName=\"story\" rows=\"10\"></textarea>\n                <mat-hint> Tell us your story! </mat-hint> \n            </mat-form-field>\n            <mat-form-field id=\"url\" name=\"url\"  class=\"col-12\">\n                <mat-label>Link</mat-label>\n                <input type=\"url\" formControlName=\"linkToPost\" matInput>\n                <mat-hint>Link to the post </mat-hint> \n            </mat-form-field>\n        </div>\n        <div class=\"row actions-row\">\n            <button type=\"submit\" mat-button (click)=\"submit()\" color=\"primary\">Submit</button>\n            <button mat-button (click)=\"cancel()\">Cancel</button>\n        </div>\n    </div>\n    <span class=\"col-sm-1 col-md-3\"></span>\n</form>","import { Store } from '@ngrx/store';\nimport * as actions from '../ngrx/edition.actions';\nimport { Component, OnInit } from '@angular/core';\nimport { NewspaperEdition } from '../models/editions';\n\nimport { getAllNewspaperEditions } from '../ngrx/edition.actions';\nimport { publishedNewspaperEditions, selectedEdition } from 'src/app/newspaper/ngrx/edition.selectors';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  editions: NewspaperEdition[];\n  selectedEditionTitle: string = '';\n  selectedEditionDateCreated: Date;\n  sitePrimaryMessage = \"Be up to date with JavaScript news and updates!\";\n  siteSecondaryMessage = \"In the fast moving technology space, it's important to know the trends. At the same time, it's not easy. It consumes energy and time. JavaScript Times makes life easy by providing regular updates in a quick summary.\";\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    \n    this.store.dispatch(getAllNewspaperEditions());\n\n    this.store\n    .select(publishedNewspaperEditions)\n    .subscribe( (data) => {\n      this.editions = data;\n      if(data && data[0]){\n        this.selectedEditionTitle = data[0].title;\n        this.selectedEditionDateCreated = data[0].dateCreated;\n        // this.store.dispatch(actions.setEdition(data[0]));\n      }\n    });\n\n    this.store\n    .select(selectedEdition)\n    .subscribe( (selectedEdition: NewspaperEdition) => {\n      if(selectedEdition){\n        this.selectedEditionTitle = selectedEdition.title;\n        this.selectedEditionDateCreated = selectedEdition.dateCreated;\n        // this.store.dispatch(actions.setEdition(selectedEdition));\n      }\n    });\n  }\n\n}\n","<p class=\"d-none d-md-block md-and-above\">\n    <mat-toolbar class=\"fixed-header \">\n        <mat-toolbar-row class=\"row\">\n            <span class=\"col-3\"></span>\n            <div class=\"col-2 center-align\">\n                <img src=\"assets/jstimes2.png\" alt=\"\">\n            </div>\n            <span class=\"col-7\">\n                <app-newspaper-edition-list class=\"col-8\" [editions]=\"editions\"></app-newspaper-edition-list>\n                <strong *ngIf=\"selectedEditionTitle && selectedEditionDateCreated\"> | {{ selectedEditionDateCreated |\n                    date:'dd-MMM-yyyy' }}</strong>\n            </span>\n        </mat-toolbar-row>\n    </mat-toolbar>\n</p>\n<div class=\"d-none d-md-block md-and-above\">\n    <div class=\"empty-fill-toolbar-space\"></div>\n    <div class=\"row site-message\">\n        <span class=\"col-2\">&nbsp;</span>\n        <span class=\"site-message col-8\">\n            {{sitePrimaryMessage}}\n            {{siteSecondaryMessage}}\n            <hr>\n        </span>\n        <span class=\"col-2\">&nbsp;</span>\n    </div>\n</div>\n<mat-toolbar class=\"fixed-header d-xs-block d-md-none\">\n    <mat-toolbar-row class=\"fixed-header\">\n        <img src=\"assets/jstimes2.png\" alt=\"\">\n        <div>\n            <app-newspaper-edition-list class=\"col-8\" [editions]=\"editions\"></app-newspaper-edition-list>\n            <strong *ngIf=\"selectedEditionTitle && selectedEditionDateCreated\"> |\n                {{ selectedEditionDateCreated | date:'dd-MMM-yyyy' }}</strong>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"d-xs-block d-md-none sm-and-below\">\n    <mat-card>\n        <mat-card-content>\n            {{sitePrimaryMessage}}\n            {{siteSecondaryMessage}}\n        </mat-card-content>\n    </mat-card>\n    <div class=\"hack\"></div>\n</div>\n<div class=\"root-node\">\n    <router-outlet></router-outlet>\n</div>","import { MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/newspaper/services/post.service';\n\n@Component({\n  selector: 'app-image-picker',\n  templateUrl: './image-picker.component.html',\n  styleUrls: ['./image-picker.component.css']\n})\nexport class ImagePickerComponent implements OnInit {\n\n  images;\n\n  constructor(private postService: PostService, \n    private dialogRef: MatDialogRef<ImagePickerComponent>) { }\n\n  ngOnInit(): void {\n    this.postService\n      .getBanners()\n      .subscribe((result) => {\n        this.images =result;\n      });\n  }\n\n  onImageClick(img){\n    this.dialogRef.close(img);\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","\n<div class=\"row\">\n    <h2 class=\"col-10\" mat-dialog-title>Select Image</h2>\n    <mat-icon class=\"col-2\" (click)=\"close()\">close</mat-icon>\n</div>\n<div class=\"row center-aligned\">\n    <div class=\"col-4\" *ngFor=\"let img of images\">\n        <a (click)=\"onImageClick(img)\">\n            <img [src]=\"img\">\n        </a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form formGroup=\"\" class=\"row\">\n    <span class=\"col-4\"></span>\n    <div class=\"col-4\">\n        <div class=\"row\">\n            <h1>Register to Login</h1>\n        </div>\n        <div class=\"row\">\n            <mat-form-field class=\"col-12\">\n                <mat-label> E-mail</mat-label>\n                <input matInput type=\"email\">\n            </mat-form-field>\n            <mat-form-field class=\"col-12\">\n                <mat-label> Password</mat-label>\n                <input matInput type=\"password\">\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <button mat-button color=\"primary\">Login</button>\n            <button mat-button >Cancel</button>\n        </div>\n    </div>\n    <span class=\"col-4\"></span>\n</form>","import { Store } from '@ngrx/store';\nimport { Component, OnInit } from '@angular/core';\nimport { getAllStories } from '../ngrx/story.actions';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(getAllStories());\n\n  }\n\n}\n","<app-nine-per-page-layout class=\"d-none d-md-block\"></app-nine-per-page-layout>  \n\n<app-single-column-layout class=\"d-xs-block d-md-none\"></app-single-column-layout>","\nexport class NewspaperEdition {\n    _id?: string;\n    title: string;\n    description: string;\n    isPublished: boolean;\n    dateCreated: Date;\n}\n\nexport class NewspaperEditions {\n    editions: NewspaperEdition[];\n}","import { NewspaperEdition } from './editions';\n\nexport class User {\n    fullname: string;\n    twitterHandle: string;\n    userImageId: string;\n}\n\nexport enum StoryCategory{\n    None,\n    Banner,\n    Highlight,\n    NewsBit,\n    Feed\n}\n\nexport class NewspaperPost {\n    _id?: string;\n    title: string;\n    description: string;\n    story: string;\n    imageId: string;\n    linkToPost: string;\n    user: User;\n    storyCategory?: StoryCategory;\n    edition?: NewspaperEdition;\n}\n\nexport class StoryCategoryMap {\n    storyIds: string[];\n    newCategory: StoryCategory;\n    edition?: NewspaperEdition;\n}\n\nexport class NewspaperPosts {\n    posts: NewspaperPost[]\n}","import { Store } from '@ngrx/store';\nimport * as actions from '../ngrx/edition.actions';\nimport { NewspaperEdition } from '../models/editions';\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { selectedEdition as selectedEditionSelector } from '../ngrx/edition.selectors';\n\n@Component({\n  selector: 'app-newspaper-edition-list',\n  styleUrls: ['./newspaper-edition-list.component.css'],\n  templateUrl: './newspaper-edition-list.component.html'\n})\nexport class NewspaperEditionListComponent implements OnInit, OnChanges {\n\n  selectedEdition: NewspaperEdition = new NewspaperEdition();\n  @Input('editions') editionsList: NewspaperEdition[];\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.store\n    .select(selectedEditionSelector)\n    .subscribe( (data: NewspaperEdition) => {\n      if(data){\n        this.selectedEdition = data;\n      }\n    });\n  }\n\n  ngOnChanges(){\n    if(this.editionsList?.length > 0 && !this.selectedEdition._id){\n      this.store.dispatch(actions.setEdition(this.editionsList[0]));\n    }\n  }\n\n  showSelectedEdition($event){\n    this.store.dispatch(actions.setEdition(this.editionsList.find(i => i._id === $event.value)));\n  }\n\n}","    <mat-select *ngIf=\"editionsList && editionsList.length\" (selectionChange)=\"showSelectedEdition($event)\" [(value)]=\"selectedEdition._id\">\n        <mat-option *ngFor=\"let edition of editionsList;\" [value]=\"edition._id\">\n            {{edition.title}}\n        </mat-option>\n    </mat-select>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { MainComponent } from './main/main.component';\nimport { LoginComponent } from './login/login.component';\nimport { ComposeComponent } from './compose/compose.component';\nimport { RegisterComponent } from './register/register.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { UpdatePostsComponent } from './update-posts/update-posts.component';\n\nconst routes: Routes = [{\n  path: 'newspaper',\n  redirectTo: 'newspaper/admin/register',\n  pathMatch: 'full'\n}, {\n  path: 'newspaper',\n  component: HomeComponent,\n  children: [{\n    path: 'main',\n    component: MainComponent\n  },{\n    path: 'admin/register',\n    component: RegisterComponent\n  }, {\n    path: 'admin/login',\n    component: LoginComponent\n  },{\n    path: 'admin/post',\n    component: CreatePostComponent\n  },{\n    path: 'admin/compose',\n    component: ComposeComponent\n  },{\n    path: 'admin/update-posts',\n    component: UpdatePostsComponent\n  }]\n},];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NewspaperRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MainComponent } from './main/main.component';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatListModule } from '@angular/material/list'\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nimport { StoryEffects } from './ngrx/story.effects';\nimport { getStoryReducer } from './ngrx/story.reducer';\nimport { EditionEffects } from './ngrx/edition.effects';\nimport { getEditionReducer } from './ngrx/edition.reducer';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { ComposeComponent } from './compose/compose.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NewspaperRoutingModule } from './newspaper-routing.module';\nimport { StoryCardComponent } from './story-card/story-card.component';\nimport { StoryListComponent } from './story-list/story-list.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostDetailsComponent } from './post-details/post-details.component';\nimport { UpdatePostsComponent } from './update-posts/update-posts.component';\nimport { BannerStoryComponent } from './banner-story/banner-story.component';\nimport { ImagePickerComponent } from './image-picker/image-picker.component';\nimport { NewspaperMainComponent } from './nine-per-page-layout/nine-per-page-layout.component';\nimport { CreateNewspaperEditionComponent } from './create-newspaper-edition/create-newspaper-edition.component';\nimport { NewspaperEditionListComponent } from './newspaper-edition-list/newspaper-edition-list.component';\nimport { SingleColumnLayoutComponent } from './single-column-layout/single-column-layout.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent, \n    MainComponent,\n    LoginComponent, \n    ComposeComponent, \n    RegisterComponent, \n    StoryListComponent, \n    StoryCardComponent,\n    CreatePostComponent, \n    ImagePickerComponent,\n    BannerStoryComponent,\n    PostDetailsComponent,\n    UpdatePostsComponent,\n    NewspaperMainComponent,\n    SingleColumnLayoutComponent, \n    NewspaperEditionListComponent,\n    CreateNewspaperEditionComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatListModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatDialogModule,\n    ScrollingModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatStepperModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatBottomSheetModule,\n    NewspaperRoutingModule,\n    EffectsModule.forFeature([StoryEffects, EditionEffects]),\n    StoreModule.forFeature( 'newspaperStories', {stories: getStoryReducer }),\n    StoreModule.forFeature( 'newspaperEditions', getEditionReducer),\n  ],\n  entryComponents:[PostDetailsComponent]\n})\nexport class NewspaperModule { }\n","import { createAction, props } from '@ngrx/store';\nimport { NewspaperEdition, NewspaperEditions } from '../models/editions';\n\nexport const getAllNewspaperEditions \n    = createAction('[Compose Component] getAllNewspaperEditions');\n\nexport const getAllEditionsSuccess \n    = createAction('[Compose Component] getAllEditionsSuccess', \n        props<NewspaperEditions>()\n    );\n\nexport const setEdition \n    = createAction('[CreateNewsPaperEdition Component] setEdition',\n        props<NewspaperEdition>()    \n    );","import { EMPTY } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport * as actions from './edition.actions';\nimport { map, mergeMap, catchError } from 'rxjs/operators';\nimport { EditionService } from '../services/edition.service';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n@Injectable()\nexport class EditionEffects {\n\n    getStories$ = createEffect(() => this.actions$.pipe(\n        ofType(actions.getAllNewspaperEditions),\n        mergeMap(() => this.editionSvc.getAll()\n            .pipe(\n                map(list => (actions.getAllEditionsSuccess({editions: list}))),\n                catchError(() => EMPTY),\n            ))\n        )\n    );\n\n    constructor(\n        private actions$: Actions,\n        private editionSvc: EditionService\n    ) {}\n}","import { Editions } from './models';\nimport * as actions from './edition.actions';\nimport { createReducer, on } from \"@ngrx/store\";\nimport { NewspaperEdition, NewspaperEditions } from '../models/editions';\n\nconst initialState: Editions = {\n    allEditions: {\n        editions: []\n    }\n}\n\nconst getAllEditions = (state: Editions, props: NewspaperEditions) => {\n    let sortedEditions = [...props.editions];\n    sortedEditions.sort((current, prev) => {\n        return new Date(current.dateCreated).getTime() - new Date(prev.dateCreated).getTime()\n    })\n    .reverse();\n\n    return {\n        ...state,\n        allEditions: {\n            editions: sortedEditions\n        }\n    };\n};\n\nconst _storyReducer = createReducer(\n    initialState,\n    on(actions.getAllEditionsSuccess, getAllEditions),\n    on(actions.setEdition, (state: Editions, props: NewspaperEdition) => ({...state, selectedEdition:props}) ),\n);\n\nexport function getEditionReducer(state: Editions, action) {\n    return _storyReducer(state,action);\n}","import { createSelector } from \"@ngrx/store\";\nimport { NewspaperEdition } from '../models/editions';\n\nexport const getNewspaperEditions = (state) => {\n    return state.newspaperEditions;\n}\n\nexport const getPublishedNewspaperEditions = (state) => {\n    return state?.newspaperEditions?.allEditions?.editions.filter( e => e.isPublished === \"true\" );\n}\n\nexport const selectedEdition = createSelector(getNewspaperEditions, (npeditions) => npeditions.selectedEdition);\nexport const allNewspaperEditions = createSelector(getNewspaperEditions, npeditions => npeditions.allEditions.editions);\nexport const publishedNewspaperEditions = createSelector(getPublishedNewspaperEditions, npeditions => npeditions);\n\n","import { createAction, props } from '@ngrx/store';\nimport { NewspaperPost, NewspaperPosts, StoryCategoryMap } from '../models/newspaper-post';\n\nexport const getAllStories = createAction('[Compose Component] getAllStories');\nexport const getAllStoriesSuccess \n    = createAction('[Compose Component] getAllStoriesSuccess', \n        props<NewspaperPosts>()\n    );\n\n// export const getStoryById = createAction('[Compose Component] getStoryById', props<String>());\n\n// export const getAvailableStories = createAction('[Compose Component getAvailableStories');\nexport const categorizeStories = createAction('[Compose Component categorizeStories', props<StoryCategoryMap>());\nexport const updateStory = createAction('[Compose Component updateStory', props<NewspaperPost>());\n\nexport const updateStoriesForEdition = createAction('[Compose Component updateStoriesForEdition', props<NewspaperPosts>());\nexport const updateStoriesForEditionSuccess = createAction('[Compose Component updateStoriesForEditionSuccess', props<Boolean>());\n\nexport const updateStoryJson = createAction('[UpdatePosts Component updateStoryJson', props<NewspaperPost>());\nexport const updateStoryJsonSuccess = createAction('[UpdatePosts Component updateStoryJsonSuccess', props<Boolean>());","import { EMPTY } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport * as actions from './story.actions';\nimport { PostService } from '../services/post.service';\nimport { map, mergeMap, catchError } from 'rxjs/operators';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\n@Injectable()\nexport class StoryEffects {\n\n    getStories$ = createEffect(() => this.actions$.pipe(\n        ofType(actions.getAllStories),\n        mergeMap(() => this.postService.getActiveStories()\n            .pipe(\n                map(stories => (actions.getAllStoriesSuccess({posts: stories}))),\n                catchError(() => EMPTY),\n            ))\n        )\n    );\n\n    updateStoriesForEdition$ = createEffect(() => this.actions$.pipe(\n        ofType(actions.updateStoriesForEdition),\n        mergeMap((req) => this.postService.updateStoriesForEdition(req)\n            .pipe(\n                map(() => (actions.updateStoriesForEditionSuccess(true))),\n                catchError(() => EMPTY),\n            ))\n        )\n    );\n\n    updateStoryJson$ = createEffect(() => this.actions$.pipe(\n        ofType(actions.updateStoryJson),\n        mergeMap((req) => this.postService.updatePost(req)\n            .pipe(\n                map(() => (actions.updateStoryJsonSuccess(true))),\n                catchError(() => EMPTY),\n            ))\n        )\n    );\n\n    constructor(\n        private actions$: Actions,\n        private postService: PostService\n    ) {}\n}","import * as _ from 'lodash';\nimport Stories from './models';\nimport * as actions from './story.actions';\nimport { createReducer, on } from \"@ngrx/store\"\nimport { NewspaperPost, NewspaperPosts, StoryCategory, StoryCategoryMap } from '../models/newspaper-post';\n\nexport const initialState: Stories = {\n    allStories: {\n        posts: []\n    }\n};\n\nconst getStateOnStoriesApiSuccess = (state: Stories, props: NewspaperPosts ) => {\n    let posts = state.allStories.posts.concat(props.posts) ;\n    return {\n        ...state,\n        allStories: {\n            posts\n        }\n    };\n};\n\n// const getStoryById = (state: Stories, props: String ) => {\n//     return state.allStories.posts.find( story => story._id === props);\n// }\n\nconst categorizeStories = (state: Stories, props: StoryCategoryMap) => {\n    let newState = [];\n    state.allStories.posts.map( story => {\n        let updatedStory: NewspaperPost;\n        if( props.storyIds.find( p => p === story._id)){\n            if(props.newCategory === StoryCategory.None){\n                updatedStory = {...story, storyCategory: null};\n            } else{\n                updatedStory = {...story, storyCategory: props.newCategory};\n                updatedStory.edition = props.edition;\n            }\n            newState.push(updatedStory);\n        } else {\n            newState.push(story);\n        }\n    });\n    return {...state, allStories: {posts: newState}};\n}\n\nconst updateStory = (state:Stories, props: NewspaperPost) => {\n    let newAllStories = _.cloneDeep(state.allStories);\n    let selectedStory = newAllStories.posts.find(story => story._id === props._id);\n    if(selectedStory){\n        let index = newAllStories.posts.indexOf(selectedStory);\n        newAllStories.posts.splice(index, 1, props);\n    }\n    return {allStories: newAllStories};\n}\n\nconst _storyReducer = createReducer(\n        initialState,\n        // on(actions.getStoryById, getStoryById),\n        on(actions.getAllStoriesSuccess, getStateOnStoriesApiSuccess),\n        on(actions.categorizeStories, categorizeStories),\n        on(actions.updateStory, updateStory)\n    );\n\nexport function getStoryReducer(state: Stories, action) {\n    return _storyReducer(state,action);\n}","import { createSelector } from \"@ngrx/store\";\nimport { NewspaperEdition } from '../models/editions';\nimport { NewspaperPost, StoryCategory } from '../models/newspaper-post';\n\nconst allStories = (state) => {\n    return state.newspaperStories.stories.allStories.posts;\n}\n\nexport const getStoryById = createSelector(allStories, (stories: NewspaperPost[], props: String) => {\n    return stories.find(story => story._id === props);\n});\n\nexport const getAssignedStories \n    = createSelector( allStories, \n        (stories: NewspaperPost[], props?) => {\n            if(props?.editionId){\n                return stories.filter(story => story.storyCategory !== undefined \n                    && story.storyCategory !== null\n                    && story.edition && story.edition._id === props.editionId);\n            } else {\n                return stories.filter(story => story.storyCategory !== undefined \n                    && story.storyCategory !== null);\n            }\n        });\n\nexport const getUnassignedStories \n    = createSelector( allStories, \n        (stories: NewspaperPost[]) => stories.filter(story => story.edition === undefined || story.edition === null));\n\nexport const getUnassignedToCurrentEdition \n        = createSelector( allStories, \n            (stories: NewspaperPost[], props: {editionId: string}) => {\n                // console.log(\"stories => \", stories, stories.map(s=> s.edition._id), props);\n                return stories.filter(story =>\n                    !story.edition || story.edition._id === null\n                    || story.edition._id === undefined\n                    || story.edition._id !== props.editionId\n                );\n            });        \n\nexport const getStoryByCateory = createSelector( allStories, (stories: NewspaperPost[], props: {category: StoryCategory, editionId: string}) => {\n    return stories.filter(story => story.storyCategory === props.category && story.edition && story.edition._id === props.editionId);\n});","import { Store } from '@ngrx/store';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { NewspaperEdition } from '../models/editions';\nimport { selectedEdition } from '../ngrx/edition.selectors';\nimport { getStoryByCateory } from '../ngrx/story.selectors';\nimport { NewspaperPost, StoryCategory } from '../models/newspaper-post';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-nine-per-page-layout',\n  templateUrl: './nine-per-page-layout.component.html',\n  styleUrls: ['./nine-per-page-layout.component.css']\n})\nexport class NewspaperMainComponent implements OnInit {\n\n  storyGroups: Array<Array<NewspaperPost>>;\n\n  bannerStories: NewspaperPost[] = [];\n  currentEdition: NewspaperEdition;\n  window: Window;\n\n  constructor(private store: Store, \n    @Inject(DOCUMENT) private document: Document) { }\n\n  ngOnInit(): void {\n\n    this.window = this.document.defaultView;\n\n    this.store\n      .select(selectedEdition)\n      .subscribe((data: NewspaperEdition) => {\n        this.bannerStories = [];\n        this.storyGroups = [];\n        this.currentEdition = data;\n        if (data && data._id) {\n          this.store\n            .select(getStoryByCateory, { category: StoryCategory.Banner, editionId: data._id })\n            .subscribe((data) => {\n              if (data) {\n                if (data && data.length > 0 && data[0].edition._id === this.currentEdition._id) {\n                  this.bannerStories = this.bannerStories.concat(data);\n                  // this.bannerStories = this.bannerStories.concat(data);\n                }\n              }\n            });\n\n          this.store\n            .select(getStoryByCateory, { category: StoryCategory.Highlight, editionId: data._id })\n            .subscribe((data) => {\n              if (data) {\n                if (data && data.length > 0 && data[0].edition._id === this.currentEdition._id) {\n                  this.groupStories(data);\n                }\n              }\n            });\n\n            this.store\n            .select(getStoryByCateory, { category: StoryCategory.NewsBit, editionId: data._id })\n            .subscribe((data) => {\n              if (data) {\n                if (data && data.length > 0 && data[0].edition._id === this.currentEdition._id) {\n                  this.groupStories(data);\n                }\n              }\n            });\n        }\n      });\n  }\n\n  getSectionCssClassByRow(rowIndex: number, set: number):string{\n    if( (rowIndex % 2 === 0 && set === 1) || (rowIndex % 2 !== 0 && set === 2) ){\n      return \"col-2\";\n    } else {\n      return \"col-6\";\n    }\n  }\n\n  getStoryCssClassByRow(rowIndex: number, set: number):string{\n    if( (rowIndex % 2 === 0 && set === 1) || (rowIndex % 2 !== 0 && set === 2) ){\n      return \"col-12\";\n    } else {\n      return \"col-6\";\n    }\n  }\n\n  isValidForLeftSet(rowIndex: number, storyIndex: number):boolean{\n    if( (rowIndex % 2 === 0 && storyIndex < 2) || (rowIndex % 2 !== 0 && storyIndex < 6) ){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isValidForRightSet(rowIndex: number, storyIndex: number):boolean{\n    if( (rowIndex % 2 === 0 && storyIndex >= 2 && storyIndex < 8) || (rowIndex % 2 !== 0 && storyIndex >= 6 && storyIndex < 8) ){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  storySelected(story: NewspaperPost){\n      this.document.getElementById(story._id).scrollIntoView({ block:'center', inline:'center', behavior: 'smooth'});\n  }\n\n  scrollTop(){\n    this.document.getElementById(\"home\").scrollIntoView({ block:'center', inline:'center', behavior: 'smooth'});\n  }\n\n  openUrl(story:NewspaperPost){\n    this.window.open(story.linkToPost, \"__blank\");\n  }\n\n  groupStories(availableStories: NewspaperPost[]){\n\n    if(!this.storyGroups){\n      this.storyGroups = new Array<Array<NewspaperPost>>();\n    }\n    let uniqueStories: NewspaperPost[] = this.getUniqueStories(availableStories);\n\n    for(let i=this.storyGroups.length; uniqueStories.length > 0; i++){\n      if(this.storyGroups[i-1] && this.storyGroups[i-1].length < 7){\n        // there is a deficit in the previous count of story groups. \n        // add stories to fill up the length to 9\n        let remainingStories = uniqueStories.splice(0,6-this.storyGroups[i-1].length); \n        this.storyGroups[i-1] = this.storyGroups[i-1].concat(remainingStories);\n      }\n      this.storyGroups[i] = uniqueStories.splice(0,6);\n    }\n\n  }\n\n  private getUniqueStories(availableStories: NewspaperPost[]){\n    let uniqueStories: NewspaperPost[] = [];\n    let allStories: NewspaperPost[] = [];\n    if(this.storyGroups ){\n      this.storyGroups.map( (sg) => {\n        allStories = allStories.concat(sg);\n      });\n  \n      availableStories.map(s => {\n        let x = allStories.find(as => as._id === s._id);\n        if(!!! x){\n          uniqueStories.push(s);\n        }\n      });\n    }\n\n    return uniqueStories;\n\n  }\n\n  formatDescription(str:string, length:number): string{\n    if(str.length > length){\n      return str.substring(0, length) + \"...\";\n    } else {\n      return str;\n    }\n  }\n\n  formatBannerText(str:string): string{\n    let bannerTextLength = 980;\n    let countOfNextLineChars = (str.split(\"\\n\\n\") || []).length * 76;\n    bannerTextLength = bannerTextLength - countOfNextLineChars;\n    if(str.length > length){\n      return str.substring(0, bannerTextLength) + \"...\";\n    } else {\n      return str;\n    }\n  }\n  // 76\n\n}\n","<span id=\"home\"></span>\n<div class=\"row page-margin\" *ngFor=\"let stories of storyGroups; let i=index\">\n    <ng-container *ngIf=\"bannerStories[i]; else secondaryLayout\">\n        <div [ngClass]=\"getSectionCssClassByRow(i,1)\">\n            <div class=\"row\">\n                <div [ngClass]=\"getStoryCssClassByRow(i,1)\" *ngFor=\"let story of stories; let storyIndex= index\">\n                    <app-story-card *ngIf=\"isValidForLeftSet(i, storyIndex)\" \n                        [story]=\"story\"\n                        [title]=\"story.title\" \n                        [description]=\"formatDescription(story.description, 227)\"\n                        (OnStorySelected) = \"storySelected($event)\"\n                    ></app-story-card>\n                    <div *ngIf=\"storyIndex === 0\">\n                        <hr />\n                    </div>\n                </div>  \n            </div>\n        </div>\n        \n        <div class=\"col-4\" *ngIf=\"bannerStories[i]\" >\n            <app-banner-story-card \n            [story] = bannerStories[i]\n            [storyContent]=\"formatBannerText(bannerStories[i].story)\"\n            (primaryAction)=\"storySelected($event)\"\n            ></app-banner-story-card>\n        </div>\n    \n        <div [ngClass]=\"getSectionCssClassByRow(i,2)\">\n            <div class=\"row\">\n                <div [ngClass]=\"getStoryCssClassByRow(i,2)\" *ngFor=\"let story of stories; let storyIndex= index\">\n                    <app-story-card *ngIf=\"isValidForRightSet(i, storyIndex)\" [title]=\"story.title\" \n                    [description]=\"formatDescription(story.description + ' ' + story.story, 420)\"\n                    [story]=\"story\"\n                    (OnStorySelected) = \"storySelected($event)\"\n                    ></app-story-card>\n                </div>  \n            </div>\n        </div>\n    </ng-container>\n\n    <ng-template #secondaryLayout>\n        <div class=\"col-4\" *ngFor=\"let story of stories\">\n            <app-story-card [title]=\"story.title\" \n            [description]=\"formatDescription(story.description + ' ' + story.story, 420)\"\n            [story]=\"story\"\n            (OnStorySelected) = \"storySelected($event)\"></app-story-card>\n        </div>  \n    </ng-template>\n\n    <div class=\"col-2\"></div>\n    <hr class=\"col-10\" />\n    <div class=\"col-2\"></div>\n</div>\n\n<div class=\"row\" *ngFor=\"let story of bannerStories\">\n        <div class=\"col-2\"[id]=\"story._id\" ></div>\n        <app-story-card class=\"col-8\"\n            showCardRaised=true \n            showHeaderAction=true\n            (headerActionClicked)=\"scrollTop()\"\n            [story]=story\n            [title]=\"story.title\" \n            [description]=\"story.description\"\n            [storyContent]=\"story.story\"\n            primaryActionTitle=\"Read complete story\"\n            (OnStorySelected) = \"openUrl($event)\"\n        ></app-story-card>\n        <div class=\"col-2\"></div>\n</div>\n<ng-container *ngFor=\"let stories of storyGroups\">\n    <div class=\"row\" *ngFor=\"let story of stories\" >\n        <div class=\"col-2\" [id]=\"story._id\" ></div>\n        <app-story-card  class=\"col-8\"\n        showCardRaised=true \n        showHeaderAction=true\n        [story]=story\n        (headerAction)=\"scrollTop()\"\n        [title]=\"story.title\" \n        [description]=\"story.description\"\n        [storyContent]=\"story.story\"\n        primaryActionTitle=\"Read complete story\"\n        (OnStorySelected) = \"openUrl($event)\"\n        ></app-story-card>\n        <div class=\"col-2\"></div>\n    </div>\n</ng-container>","import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { NewspaperPost } from '../models/newspaper-post';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.css']\n})\nexport class PostDetailsComponent implements OnInit {\n\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: NewspaperPost,\n    private matBottomSheet: MatBottomSheetRef<PostDetailsComponent>) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  close(){\n    this.matBottomSheet.dismiss();\n  }\n\n}\n","<div>\n    <button mat-button (click)=\"close()\"> <mat-icon>close</mat-icon> </button>\n    <div *ngIf=\"data\">\n        <div  class=\"row\">\n            <strong>\n                {{data.title}}\n            </strong>\n        </div>\n\n        <div class=\"row\">\n            {{data.description}}\n        </div>\n\n        <div class=\"row\">\n            {{data.story}}\n        </div>\n    \n        <a  class=\"row\" tabindex=\"-1\" [href]=\"data.linkToPost\" target=\"_blank\">\n            Read full article\n        </a>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form formGroup=\"\" class=\"row\">\n    <span class=\"col-2\"></span>\n    <div class=\"col-8\">\n        <div class=\"row\">\n            <h1>Register to Login</h1>\n        </div>\n        <div class=\"row\">\n            <mat-form-field class=\"col-6\">\n                <mat-label> Full Name</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> E-mail</mat-label>\n                <input matInput type=\"email\">\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> Password</mat-label>\n                <input matInput type=\"password\">\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> Twitter Handle</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> LinkedIn URL</mat-label>\n                <input matInput>\n            </mat-form-field>\n            <mat-form-field class=\"col-6\">\n                <mat-label> Bio</mat-label>\n                <textarea matInput rows=\"4\"></textarea>\n            </mat-form-field>\n        </div>\n        <div class=\"row\">\n            <button mat-button color=\"primary\">Submit</button>\n            <button mat-button >Cancel</button>\n        </div>\n    </div>\n    <span class=\"col-2\"></span>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { NewspaperEdition } from '../models/editions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditionService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  create(edition: NewspaperEdition){\n    return this.httpClient\n      .post<NewspaperEdition>('/newspaper-edition', edition);\n  }\n\n  getAll(){\n    return this.httpClient\n      .get<NewspaperEdition[]>('/newspaper-edition');\n  }\n\n  \n  \n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NewspaperPost, NewspaperPosts } from 'src/app/newspaper/models/newspaper-post';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getBanners(){\n    return this.httpClient.get('/storage');\n  }\n\n  create(post: NewspaperPost){\n    return this.httpClient\n      .post<NewspaperPost>('/newspaper-post',post);\n  }\n\n  getActiveStories() : Observable<NewspaperPost[]> {\n    return this.httpClient\n      .get<NewspaperPost[]>('/newspaper-post');\n  }\n\n  updateStoriesForEdition(posts: NewspaperPosts){\n    return this.httpClient\n      .post('/newspaper-post/add-posts-to-edition',posts.posts);\n  }\n\n  updatePost(post: NewspaperPost){\n    return this.httpClient\n      .post<NewspaperPost>('/newspaper-post/update-post',post);\n  }\n\n}\n","import { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { NewspaperEdition } from '../models/editions';\nimport { selectedEdition } from '../ngrx/edition.selectors';\nimport { getStoryByCateory } from '../ngrx/story.selectors';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { NewspaperPost, StoryCategory } from '../models/newspaper-post';\nimport { PostDetailsComponent } from '../post-details/post-details.component';\n\n@Component({\n  selector: 'app-single-column-layout',\n  templateUrl: './single-column-layout.component.html',\n  styleUrls: ['./single-column-layout.component.css']\n})\nexport class SingleColumnLayoutComponent implements OnInit, OnDestroy {\n\n  window: Window;\n  showHideHelpTextCss=\"show\";\n  currentEditon: NewspaperEdition;\n  bannerStories: NewspaperPost[] = [];\n  newsbitStories: NewspaperPost[] = [];\n  highlightStories: NewspaperPost[] = [];\n\n  destory$ = new Subject<void>();\n\n  constructor(private store: Store, \n    @Inject(DOCUMENT) private document: Document,\n    private dialog: MatBottomSheet) { }\n\n  ngOnInit(): void {\n\n    this.window = this.document.defaultView;\n\n    this.store\n      .select(selectedEdition)\n      .subscribe((ne: NewspaperEdition) => {\n        this.currentEditon = ne;\n        this.resetStories();\n        if (ne && ne._id) {\n          this.store\n            .select(getStoryByCateory, { category: StoryCategory.Banner, editionId: ne._id })\n            .pipe(takeUntil(this.destory$))\n            .subscribe((bnSt: NewspaperPost[]) => {\n              if (bnSt && bnSt.length > 0 && bnSt[0].edition._id === this.currentEditon._id) {\n                this.bannerStories = bnSt;\n              }\n            });\n\n          this.store\n            .select(getStoryByCateory, { category: StoryCategory.Highlight, editionId: ne._id })\n            .pipe(takeUntil(this.destory$))\n            .subscribe((nph: NewspaperPost[]) => {\n              if (nph && nph.length > 0 && nph[0].edition._id === this.currentEditon._id) {\n                this.highlightStories = nph;\n              }\n            });\n\n            this.store\n            .select(getStoryByCateory, { category: StoryCategory.NewsBit, editionId: ne._id })\n            .pipe(takeUntil(this.destory$))\n            .subscribe((nnb: NewspaperPost[]) => {\n              if (nnb && nnb.length > 0 && nnb[0].edition._id === this.currentEditon._id) {\n                this.newsbitStories = nnb;\n              }\n            });\n        }\n      });\n  }\n\n  formatDescription(str:string, length:number): string{\n    if(str.length > length){\n      return str.substring(0, length) + \"...\";\n    } else {\n      return str;\n    }\n  }\n\n  ngOnDestroy(){\n    this.destory$.complete();\n\n  }\n\n  openUrl(story:NewspaperPost){\n    this.window.open(story.linkToPost, \"__blank\");\n  }\n\n  showModelDialog(story: NewspaperPost){\n    this.dialog.open(PostDetailsComponent, {\n      data: story\n    });\n  }\n\n  resetStories(){\n    this.bannerStories = [];\n    this.newsbitStories = [];\n    this.highlightStories = [];\n  }\n\n  closeHelpInfo(){\n    this.showHideHelpTextCss=\"hide\";\n  }\n\n}\n","<div class=\"small-font\" *ngFor=\"let story of bannerStories; let i = index\" >\n    <app-banner-story-card \n    [story] = story\n    [storyContent]= \"story.story\"\n    (primaryAction)=\"openUrl(story)\"\n    primaryActionTitle=\"Read Article\"\n    [showCardRaised]=true\n    ></app-banner-story-card>\n    <div *ngIf=\"i === 0 || i === 3\" class=\"horizontal-scroll-container\">\n        <div class=\"info-container\" [ngClass]=\"showHideHelpTextCss\" (click)=\"closeHelpInfo()\">\n            <div class=\"info-message\">\n                Scroll for more <br/>\n                <mat-icon class=\"big-icon\">swap_horizontal_circle</mat-icon>\n            </div>\n        </div>\n        <div class=\"card-container\" *ngFor=\"let story of highlightStories\">\n            <app-story-card [story]=\"story\" \n             [showCardRaised]=false  \n             [title]=\"story.title\" \n             [description]=\"formatDescription(story.description, 300)\"\n             (OnStorySelected)=\"showModelDialog($event)\"\n             ></app-story-card>\n        </div>\n    </div>\n</div>\n\n<div class=\"story-list\" *ngFor=\"let story of newsbitStories\">\n    <app-story-card \n        [story]=\"story\" \n        [title]=\"story.title\" \n        [showCardRaised]=true \n        [storyContent]=\"story.story\"\n        primaryActionTitle=\"Read Article\"\n        [description]=\"story.description\" \n        (OnStorySelected)=\"openUrl(story)\"\n        ></app-story-card>\n</div>\n","import { NewspaperPost } from '../models/newspaper-post';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-story-card',\n  templateUrl: './story-card.component.html',\n  styleUrls: ['./story-card.component.css']\n})\nexport class StoryCardComponent implements OnInit {\n\n  @Input() showCardRaised = false;\n  @Input() story: NewspaperPost;\n  @Input() title: string;\n  @Input() description: string;\n  @Input() storyContent: string;\n  @Input() customActionTitle: string;\n  @Input() showHeaderAction: boolean = false;\n  @Input() primaryActionTitle = \"more\"\n  @Output() headerAction= new EventEmitter();\n  @Output() OnStorySelected = new EventEmitter<NewspaperPost>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  OnMoreSelect(){\n    this.OnStorySelected.emit(this.story);\n  }\n\n  headerActionClicked(){\n    this.headerAction.emit(true);\n  }\n\n  customAction(){\n  }\n\n}\n","<mat-card [ngClass]=\"showCardRaised?'mat-elevation-z2':'mat-elevation-z0'\">\n    <mat-card-header>\n        <div class=\"row\">\n            <mat-card-title class=\"col-10\">{{title}}</mat-card-title>\n            <button class=\"col-2\" mat-button *ngIf=\"showHeaderAction\" (click)=\"headerActionClicked()\">\n                <mat-icon>keyboard_arrow_up</mat-icon>\n            </button>\n        </div>\n    </mat-card-header>\n    <mat-card-content>\n        <div>\n            {{description}}\n        </div>\n        <div *ngIf=\"storyContent\">\n            {{storyContent}}\n        </div>\n    </mat-card-content>\n    \n    <mat-card-actions>\n        <button mat-button (click)=\"OnMoreSelect()\">{{primaryActionTitle}}</button>\n        <button mat-button (click)=\"customAction()\" *ngIf=\"customActionTitle\">{{customActionTitle}}</button>\n    </mat-card-actions>\n</mat-card>","import { NewspaperPost } from 'src/app/newspaper/models/newspaper-post';\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-story-list',\n  templateUrl: './story-list.component.html',\n  styleUrls: ['./story-list.component.css']\n})\nexport class StoryListComponent implements OnInit {\n\n  @Input(\"Title\") listTitle: string = '';\n  @Input(\"Stories\") stories: Array<NewspaperPost>;\n  @Input(\"IsRemoveEnabled\") remove: boolean = false;\n  @Output(\"SelectedPost\") selectedPost = new EventEmitter<NewspaperPost>();\n  @Output(\"RemovedPost\") removedPost = new EventEmitter<NewspaperPost>();\n\n\n  constructor() { }\n  ngOnInit(): void { }\n\n  onSelect(post: NewspaperPost){\n    this.selectedPost.emit(post);\n  }\n\n  removeItem(item: NewspaperPost){\n    this.stories.splice(this.stories.indexOf(item),1);\n    this.removedPost.emit(item);\n  }\n\n}\n","<h1>{{listTitle}}</h1>\n<mat-list>\n    <mat-list-item *ngFor=\"let post of stories\"  class=\"row\" (click)=\"onSelect(post)\">\n        <strong class=\"col-10\"> {{post.title}} </strong>\n        <mat-icon *ngIf=\"remove\" class=\"col-2\" (click)=\"removeItem(post)\">close</mat-icon>\n        <mat-divider class=\"col-12\"></mat-divider>\n    </mat-list-item>\n</mat-list>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { NewspaperPost } from '../models/newspaper-post';\nimport { getAllStories, updateStoryJson } from '../ngrx/story.actions';\nimport { getAssignedStories, getUnassignedStories} from '../ngrx/story.selectors';\n\n@Component({\n  selector: 'app-update-posts',\n  templateUrl: './update-posts.component.html',\n  styleUrls: ['./update-posts.component.css']\n})\nexport class UpdatePostsComponent implements OnInit {\n\n  stories: NewspaperPost[] = [];\n  story: string=\"\";\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n\n    this.store.dispatch(getAllStories());\n\n    this.store\n    .select(getAssignedStories)\n    .subscribe((data) => {\n      this.stories = this.stories.concat(data);\n    });\n\n    this.store\n    .select(getUnassignedStories)\n    .subscribe((data) => {\n      this.stories = this.stories.concat(data);\n    });\n  }\n\n  onSelectTopBanner($event){\n    this.story = JSON.stringify($event, null, 4);\n  }\n\n  updateJsonText($event){\n    this.story = $event.target.value;\n  }\n\n  savePost(){\n    this.store.dispatch(updateStoryJson(JSON.parse(this.story) as NewspaperPost) )\n  }\n\n}\n","<!-- <div fxLayout='row' class=\"zero\">\n\n    <div fxFlex class=\"one\">1</div>\n    <div fxFlex=\"33%\" fxLayout='column' class=\"two\">\n\n        <div fxFlex class=\"two_one\">2.1</div>\n        <div fxFlex class=\"two_two\">2.2</div>\n        <div fxFlex class=\"two_three\">2.3</div>\n\n    </div>\n    <div fxFlex class=\"three\">3</div>\n\n</div> -->\n<div class=\"row\">\n    <div class=\"col-8\"></div>\n    <button class=\"col-2\" mat-button (click)=\"savePost()\"> Save </button>\n    <div class=\"col-2\"></div>\n</div>\n\n<div class=\"row\">\n    <app-story-list [Stories]=\"stories\" \n        Title=\"Available Stories\" \n        class=\"col-4\"\n        (SelectedPost)=\"onSelectTopBanner($event)\">\n    </app-story-list>\n    \n    <textarea class=\"col-6\" (change)=\"updateJsonText($event)\" rows=\"20\" [value]=\"story\"></textarea>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  pages = [{\n    path: 'blog',\n    label: \"Blog\"\n  },\n  {\n    path: 'books',\n    label: \"Books\"\n  },\n  {\n    path: 'about',\n    label: \"About Me!\"\n  }];\n}\n","<div class=\"fixed-header\">\n    <sc-toolbar></sc-toolbar>\n    <nav mat-tab-nav-bar>\n        <a mat-tab-link *ngFor=\"let page of pages\" [routerLink]=\"page.path\" routerLinkActive #rla=\"routerLinkActive\"\n            [active]=\"rla.isActive\">{{page.label}} </a>\n    </nav>\n</div>\n<div class=\"root-node\">\n    <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  color1 = \"skyblue\";\n  color2 = \"#F4EAE8\";\n  color3 = \"lightpink\";\n  color4 = \"lightgreen\";\n  color5 = \"#FEBDB0\"\n\n  introParagraph = \"<i>I've</i> been in software development for over 17 years.\" + \n  \"<br />I'm a three-time Microsoft MVP and the author of a two books, and several technology articles from Dot Net Curry and DNC magazine.\" + \n  \"I hold a master's degree in software systems from the University of St. Thomas, Minneapolis and St. Paul, USA.\";\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-md-5 col-lg-3\">\n        <mat-card>\n            <img mat-card-image src=\"assets/profile-pic.jpg\" class=\"book-image\" alt=\"profile picture\">\n\n            <mat-card-header>\n                <mat-card-title>Venkata Keerti Kotaru</mat-card-title>\n                <mat-card-subtitle>Author, Three time Microsoft MVP and a blogger</mat-card-subtitle>\n            </mat-card-header>\n        </mat-card>\n    </div>\n    <div class=\"col-md-6 col-lg-8\">\n        <p class=\"d-none d-lg-block\">\n            <mat-grid-list cols=\"3\" rowHeight=\"220px\">\n                <mat-grid-tile colspan=\"2\" [style.background]=\"color5\">\n                    <span [innerHtml]=\"introParagraph\"></span>\n                </mat-grid-tile>\n                <a href=\"https://www.linkedin.com/in/keertikotaru/\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color1\">\n                        <img src=\"assets/Linkedin.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            View LinkedIn Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://twitter.com/keertikotaru\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color2\">\n                        <img src=\"assets/twitter.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Follow on Twitter\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://github.com/kvkirthy/\" target=\"__blank\">\n\n                    <mat-grid-tile [style.background]=\"color3\">\n                        <img src=\"assets/github.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Github Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://stackoverflow.com/users/2955455/vencki\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color4\">\n                        <img src=\"assets/stackoverflow.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Stackoverflow Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n\n            </mat-grid-list>\n        </p>\n        <p class=\"d-lg-none d-sm-block\">\n            <mat-grid-list cols=\"1\" rowHeight=\"240px\" class=\"single-item\">\n                <mat-grid-tile [style.background]=\"color5\">\n                    <span [innerHtml]=\"introParagraph\"></span>\n                </mat-grid-tile>\n            </mat-grid-list>\n            <mat-grid-list cols=\"1\" rowHeight=\"120px\" gutterSize=\"5px\">\n                <a href=\"https://www.linkedin.com/in/keertikotaru/\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color1\">\n                        <img src=\"assets/Linkedin.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            View LinkedIn Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://twitter.com/keertikotaru\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color2\">\n                        <img src=\"assets/twitter.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Follow on Twitter\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://github.com/kvkirthy/\" target=\"__blank\">\n\n                    <mat-grid-tile [style.background]=\"color3\">\n                        <img src=\"assets/github.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Github Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n                <a href=\"https://stackoverflow.com/users/2955455/vencki\" target=\"__blank\">\n                    <mat-grid-tile [style.background]=\"color4\">\n                        <img src=\"assets/stackoverflow.png\" class=\"img-logo\" alt=\"LinkedIn logo\">\n                        <div class=\"link\">\n                            Stackoverflow Profile\n                        </div>\n                    </mat-grid-tile>\n                </a>\n\n            </mat-grid-list>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { Blog } from 'src/app/showcase/models/blog';\nimport { BlogsService } from './blogs.service';\nimport * as blogData from './blogs-data.json';\n\n@Component({\n  selector: 'app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.css']\n})\nexport class BlogsComponent implements OnInit {\n\n  blogList$: Observable<Array<Blog>>;\n  highlightedBlog: Blog;\n  constructor(private blogService: BlogsService) { }\n\n  ngOnInit() {\n    let allBlogs = [];\n    this.blogService\n      .getBlogs()\n      .subscribe(data => {\n        allBlogs = data;\n        this.highlightedBlog = allBlogs.find(i => i.isHighlighted);\n        this.blogList$ = of(allBlogs.filter(i => !i.isHighlighted ));\n      });\n  }\n\n  cardClickHandler(linkToBlog){\n    window.open(linkToBlog, \"__blog\");\n  }\n\n}\n","<div class=\"d-none d-lg-block\">\n    <div class=\"row\">\n        <div class=\"col-sm-4 primary-card\" *ngIf=\"highlightedBlog\">\n            <mat-card (click)=\"cardClickHandler(highlightedBlog.linkToBlog)\">\n                <img mat-card-image class=\"card-image\" [src]=\"highlightedBlog.imageUrl\">\n\n                <mat-card-header>\n                    <mat-card-title>{{highlightedBlog.title}}\n                        <mat-icon color=\"accent\">fiber_new</mat-icon>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content>{{highlightedBlog.description}}</mat-card-content>\n            </mat-card>\n        </div>\n\n        <div class=\"col-sm-8\">\n            <div class=\"row\">\n                <ng-container *ngFor=\"let blog of blogList$ | async; let i=index\">\n                    <div class=\"col-md-6 small-cards-recent\">\n                        <mat-card *ngIf=\"i < 4\" (click)=\"cardClickHandler(blog.linkToBlog)\">\n\n                            <mat-card-header>\n                                <img mat-card-avatar [src]=\"blog.imageUrl\">\n                                <mat-card-subtitle>\n                                    {{blog.title}}\n                                </mat-card-subtitle>\n                            </mat-card-header>\n                            <mat-card-content>{{blog.description}}</mat-card-content>\n                        </mat-card>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <ng-container *ngFor=\"let blog of blogList$ | async; let i=index\">\n            <div *ngIf=\"i >= 4\" class=\"col-sm-4 small-cards\">\n                <mat-card (click)=\"cardClickHandler(blog.linkToBlog)\">\n                    <mat-card-header>\n                        <img mat-card-avatar [src]=\"blog.imageUrl\">\n                        <mat-card-subtitle>\n                            {{blog.title}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>{{blog.description}}</mat-card-content>\n                </mat-card>\n            </div>\n        </ng-container>\n    </div>\n</div>\n<div class=\"d-xs-block d-lg-none\">\n    <div class=\"row\">\n        <div class=\"col-sm-10\" *ngIf=\"highlightedBlog\">\n            <mat-card (click)=\"cardClickHandler(highlightedBlog.linkToBlog)\">\n                <img mat-card-image [src]=\"highlightedBlog.imageUrl\">\n\n                <mat-card-header>\n                    <mat-card-title>{{highlightedBlog.title}}\n                        <mat-icon color=\"accent\">fiber_new</mat-icon>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content>{{highlightedBlog.description}}</mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-10\">\n            <ng-container *ngFor=\"let blog of blogList$ | async;\">\n                <mat-card (click)=\"cardClickHandler(blog.linkToBlog)\">\n                    <mat-card-header>\n                        <img mat-card-avatar class=\"avatar\" [src]=\"blog.imageUrl\">\n                        <mat-card-subtitle>{{blog.title}}</mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>{{blog.description}}</mat-card-content>\n                </mat-card>\n            </ng-container>\n        </div>\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Blog } from 'src/app/showcase/models/blog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getBlogs(): Observable<Blog[]>{\n    return this.httpClient\n      .get<Blog[]>('/blog-posts');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-3\"></div>\n  <div class=\"col-md-3 col-sm-12\">\n    <mat-card>\n      <img mat-card-image src=\"assets/book-2.jpg\" class=\"book-image\" alt=\"Angular 2 book\">\n      <!-- <mat-card-header> -->\n        <!-- <mat-card-subtitle>\n          Build Angular applications faster and better with TypeScript and Material Design.\n        </mat-card-subtitle>\n      </mat-card-header> -->\n\n      <mat-card-actions class=\"small-text\">\n        <a mat-button href=\"https://www.apress.com/us/book/9781484254332\" target=\"__blank\" color=\"primary\">Apress</a>\n        <a mat-button\n          href=\"https://www.amazon.com/Angular-Material-Design-TypeScript-Interface/dp/1484254333/ref=sr_1_3?keywords=angular+material&qid=1578191826&sr=8-3\"\n          target=\"__blank\" color=\"primary\">Amazon</a>\n        <a mat-button href=\"https://github.com/kvkirthy/superheroes\" target=\"__blank\" color=\"primary\">Samples</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n\n  <div class=\"col-md-3 col-sm-12\">\n    <mat-card>\n      <img mat-card-image src=\"assets/book-1.jpg\" class=\"book-image\" alt=\"Angular 2 book\">\n      <!-- <mat-card-header>\n        <mat-card-subtitle>\n          Build applications with AngularJS (version 1.x) and Material Design. Uses Angular Material library.\n        </mat-card-subtitle>\n      </mat-card-header> -->\n      <mat-card-actions class=\"small-text\">\n        <a mat-button href=\"https://www.apress.com/us/book/9781484221891\" target=\"__blank\" color=\"primary\">Apress</a>\n        <a mat-button href=\"https://www.amazon.com/dp/B01L17B8LK/ref=rdr_kindle_ext_tmb\" target=\"__blank\"\n          color=\"primary\">Amazon</a>\n        <a mat-button href=\"https://github.com/kvkirthy/Angular-Material-Samples\" target=\"__blank\"\n          color=\"primary\">Samples</a>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n  <div class=\"col-md-3\"></div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-opinion',\n  templateUrl: './opinion.component.html',\n  styleUrls: ['./opinion.component.css']\n})\nexport class OpinionComponent implements OnInit {\n\n  twttr = window['twttr'] || {};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.twttr && this.twttr.widgets.load();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './pages/about/about.component';\nimport { BooksComponent } from './pages/books/books.component';\nimport { BlogsComponent } from './pages/blogs/blogs.component';\nimport { HomeComponent } from './home/home.component';\n\n// import { HomeComponent } from './pages/home/home.component';\n// import { OpinionComponent } from './pages/opinion/opinion.component';\n\nexport const pages = [  \n  {\n    path: 'showcase',\n    component: HomeComponent,\n    children: [\n      {\n        path: 'blog',\n        component: BlogsComponent,\n        label: \"Blog\"\n      },\n      {\n        path: 'books',\n        component: BooksComponent,\n        label: \"Books\"\n      },\n      {\n        path: 'about',\n        component: AboutComponent,\n        label: \"About Me!\"\n      }\n    ]\n  }];\n\nconst routes: Routes = [ \n  {\n    path: 'showcase',\n    redirectTo: '/showcase/blog',\n    pathMatch: 'full'\n  },\n  ...pages,\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShowcaseRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { BooksComponent } from './pages/books/books.component';\nimport { BlogsComponent } from './pages/blogs/blogs.component';\nimport { OpinionComponent } from './pages/opinion/opinion.component';\nimport { ScToolbarComponent } from '../components/sc-toolbar/sc-toolbar.component';\n\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { ShowcaseRoutingModule } from './showcase-routing.module';\n\n\n@NgModule({\n  declarations: [    \n    HomeComponent,\n    AboutComponent,\n    BooksComponent,\n    OpinionComponent,\n    BlogsComponent,\n    ScToolbarComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatGridListModule,\n    ShowcaseRoutingModule\n  ]\n})\nexport class ShowcaseModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}